{"version":3,"sources":["serviceWorker.js","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/create.js","tweets/list.js","tweets/feed.js","tweets/components.js","index.js"],"names":["Boolean","window","location","hostname","match","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","author","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetCreate","didTweet","textAreaRef","React","createRef","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","required","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","FeedList","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","createElement","tweetsEl","getElementById","ReactDOM","render","setNewTweets","canTweet","tempNewTweets","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ec97e030.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","function getCookie(name) {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      const cookies = document.cookie.split(';');\r\n      for (let i = 0; i < cookies.length; i++) {\r\n          const cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data){\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n  if (csrftoken){\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n  \r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        if (window.location.href.indexOf(\"login\") === -1){\r\n          window.location.href = \"/login?showLoginRequired=true\"\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\r\n  }\r\n\r\nexport function apiTweetAction(tweetId, action, callback){\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint =  \"/tweets/feed/\"\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint =  \"/tweets/\"\r\n    if (username){\r\n        endpoint =  `/tweets/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}","import React from 'react'\r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n    const handleActionBackendEvent = (response, status) => {\r\n        console.log(response, status)\r\n        console.log(tweet.author.username)\r\n        if ((status === 200 || status === 201) && didPerformAction){\r\n            didPerformAction(response, status)\r\n        }\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n        \r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }","import React from 'react'\r\n\r\n\r\nexport function UserLink (props) {\r\n  const {username} = props\r\n  const handleUserLink = (event) => {\r\n    window.location.href= `/profiles/${username}`\r\n  }\r\n  return <span className='pointer' onClick={handleUserLink}>\r\n      {props.children}\r\n  </span>\r\n}\r\n\r\nexport  function UserDisplay(props){\r\n  const {user, includeFullName} = props\r\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\r\n  return <React.Fragment>\r\n    {nameDisplay}\r\n    <UserLink username={user.username}>@{user.username}</UserLink>\r\n  </React.Fragment>\r\n}\r\n\r\nexport  function UserPicture (props) {\r\n  const {user} = props\r\n  return  <UserLink username={user.username}><span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n         {user.username[0]}\r\n  </span></UserLink>\r\n}","import React, {useState}  from 'react'\r\n\r\nimport {ActionBtn} from './buttons'\r\n\r\nimport {\r\n  UserDisplay,\r\n  UserPicture\r\n} from '../profiles'\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\r\n  }\r\n  export function Tweet(props) {\r\n      const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\r\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n      let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n      className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n      const path = window.location.pathname\r\n      const match = path.match(/(?<tweetid>\\d+)/)\r\n      const urlTweetId = match ? match.groups.tweetid : -1\r\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n      \r\n      const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n      }\r\n      const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200){\r\n          setActionTweet(newActionTweet)\r\n        } else if (status === 201) {\r\n          if (didRetweet){\r\n            didRetweet(newActionTweet)\r\n          }\r\n        }\r\n        \r\n      }\r\n      \r\n      return <div className={className}>\r\n         {isRetweet === true && <div className='mb-2'>\r\n          <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\r\n        </div>}\r\n        <div className='d-flex'>\r\n       \r\n          <div className=''>\r\n            <UserPicture user={tweet.user} />\r\n          </div>\r\n          <div className='col-11'>\r\n              <div>\r\n             \r\n                <p>\r\n                  <UserDisplay includeFullName user={tweet.user} />\r\n                </p>\r\n                <p>{tweet.content}</p>\r\n               \r\n                <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n              </div>\r\n          <div className='btn btn-group px-0'>\r\n          {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n                </React.Fragment>\r\n          }\r\n                  {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n                </div>\r\n                </div>\r\n      </div>\r\n      </div>\r\n    }\r\n  ","import React from 'react'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\n\r\nexport function TweetCreate(props){\r\n    const {didTweet} = props\r\n    const textAreaRef = React.createRef()\r\n\r\n    const handleBackendUpdate = (response, status) =>{\r\n        if (status === 201){\r\n            didTweet(response)\r\n        } else {\r\n            console.log(response)\r\n            alert(\"An error occured! Please try again\")\r\n        }\r\n      }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      const newVal = textAreaRef.current.value\r\n      // backend api request\r\n      apiTweetCreate(newVal, handleBackendUpdate)\r\n      textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n        <form onSubmit={handleSubmit}>\r\n            <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n            </textarea>\r\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n        </form>\r\n    </div>\r\n}","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetList} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetFeed} from './lookup'\r\nimport {Tweet} from './detail'\r\n\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          }\r\n        }\r\n        apiTweetFeed(handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          }\r\n        }\r\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }","import React, {useEffect, useState} from 'react'\r\nimport {TweetsList} from './list'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {TweetCreate} from './create'\r\nimport {Tweet} from './detail'\r\nimport {FeedList} from './feed'\r\n\r\nexport function FeedComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleNewTweet = (newTweet) =>{\r\n      let tempNewTweets = [...newTweets]\r\n      tempNewTweets.unshift(newTweet)\r\n      setNewTweets(tempNewTweets)\r\n    }\r\n    return <div className={props.className}>\r\n            {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <FeedList newTweets={newTweets} {...props} />\r\n    </div>\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleNewTweet = (newTweet) =>{\r\n      let tempNewTweets = [...newTweets]\r\n      tempNewTweets.unshift(newTweet)\r\n      setNewTweets(tempNewTweets)\r\n    }\r\n    return <div className={props.className}>\r\n            {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n}\r\n  \r\n\r\nexport function TweetDetailComponent(props){\r\n    const {tweetId} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [tweet, setTweet] = useState(null)\r\n\r\n    const handleBackendLookup = (response, status) => {\r\n        if (status === 200){\r\n            setTweet(response)\r\n        } else {\r\n            alert(\"There was an error finding your tweet.\")\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if(didLookup === false){\r\n            apiTweetDetail(tweetId, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n\r\n    }, [tweetId, didLookup, setDidLookup])\r\n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets'\n\n// const rootEl = document.getElementById(\"root\")\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   rootEl\n// );\n\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"twitterclone\")\nif (tweetsEl){\n  ReactDOM.render(\n    e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"twitterclone-feed\")\nif (tweetFeedEl){\n  ReactDOM.render(\n    e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".twitterclone-detail\")\n\ntweetDetailElements.forEach(container=>{\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset),\n    container);\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}